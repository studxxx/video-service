version: '3.7'
services:
  frontend-nginx:
    build:
      context: ./frontend/docker
      dockerfile: nginx.docker
    volumes:
    - ./frontend:/var/www/frontend
    ports:
    - "8080:80"
  frontend-nodejs:
    image: node:10.19-jessie
    volumes:
    - ./frontend:/var/www/frontend
    working_dir: /var/www/frontend
    tty: true

  api-nginx:
    build:
      context: ./api/docker
      dockerfile: nginx.docker
    volumes:
    - ./api:/var/www/api
    depends_on:
    - api-php-fpm
    ports:
    - "8081:80"
  api-php-fpm:
    build:
      context: ./api/docker
      dockerfile: php-fpm.docker
    volumes:
    - ./api:/var/www/api
    - ./storage:/var/www/storage
    depends_on:
      - api-postgres
      - mailer
      - rabbitmq
    environment:
      XDEBUG_CONFIG: "idekey=PHPSTORM remote_enable=1 remote_connect_back=1"
      PHP_IDE_CONFIG: "serverName=docker"
  api-php-cli:
    build:
      context: ./api/docker
      dockerfile: php-cli.docker
    volumes:
    - ./api:/var/www/api
    - composer:/root/.composer/cache
    - ./storage:/var/www/storage
    depends_on:
      - api-postgres
      - mailer
      - rabbitmq
    working_dir: /var/www/api
    tty: true
    environment:
      XDEBUG_CONFIG: "idekey=PHPSTORM remote_enable=1 remote_connect_back=1"
      PHP_IDE_CONFIG: "serverName=docker"
  api-postgres:
    image: postgres:12.2-alpine
    volumes:
    - ./api/var/docker/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: api
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: api
    ports:
    - "54321:5432"

  mailer:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
    - "1025:1025"
    - "8082:8025"

  storage-nginx:
    build:
      context: ./storage/docker
      dockerfile: nginx.docker
    volumes:
    - ./storage:/var/www/storage
    ports:
    - "8083:80"

  websocket-nodejs:
    image: node:10.19-jessie
    volumes:
    - ./websocket:/var/www/websocket
    ports:
    - "8084:8000"
    working_dir: /var/www/websocket
    tty: true

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    ports:
    - "8085:15672"
    - "5672:5672"
    volumes:
    - ./rabbitmq/docker/enabled_plugins:/etc/rabbitmq/enabled_plugins

volumes:
  composer:
  api-postgres:
